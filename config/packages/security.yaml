security:
    encoders:
        # use your user class name here
        App\Entity\Customer:
            # Use native password encoder
            # This value auto-selects the best possible hashing algorithm
            # (i.e. Sodium when available).
            algorithm: auto
    providers:
        customers:
            entity:
                class: App\Entity\Customer
                property: mail
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/BileMo/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /BileMo/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/BileMo
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/BileMo/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/BileMo,       roles: ROLE_ADMIN }
